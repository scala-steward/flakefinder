version = "3.7.8"
runner.dialect = scala213

#
# See http://scalameta.org/scalafmt/#Configuration for details
#
project {
  includeFilters = [
    ".*.\\.scala$"
    ".*\\..sbt$"
  ]
}

# An unconventional number but good for our setting where we're all on similar machines with large screen and do no mobile review.
maxColumn = 120

# Vertical alignment, options: none, some, more
#
# This awkward, self-contradictory, configuration ensures that only
# the common sbt tokens get aligned, and not "production" code.
#
align {
  preset = more
  arrowEnumeratorGenerator = true
  multiline = true
  tokens."+" = [
    {code = "="},
    {code = "<-"},
    {code = "->"}
  ]
}

# If true, the margin character | is aligned with the opening triple quote string literals
assumeStandardLibraryStripMargin = true

# Must be true for 'newlines.source = keep' which grants the developer more control over when new lines should (not) be inserted.
includeCurlyBraceInSelectChains = true

continuationIndent {
  callSite = 2
  defnSite = 2
  extendSite = 4
}

danglingParentheses.preset = true

newlines {
  source = keep
  alwaysBeforeMultilineDef = false
  sometimesBeforeColonInMethodReturnType = true
  penalizeSingleSelectMultiArgList = false
  alwaysBeforeElseAfterCurlyIf = false
  neverInResultType = false
  topLevelStatementBlankLines = [
    { blanks { before = 1 } }
  ]
}

spaces {
  afterKeywordBeforeParen = true
}

binPack {
  parentConstructors = true
  literalArgumentLists = true
}

optIn {
  breaksInsideChains = false
  breakChainOnFirstMethodDot = true
  configStyleArguments = true
}

runner {
  optimizer {
    # Set to -1 to disable. Number of characters needed to trigger "config-style" formatting
    # see: http://scalameta.org/scalafmt/#runner.optimizer.forceConfigStyleOnOffset
    forceConfigStyleOnOffset = 150

    # minimum number of func arguments before config-style (look at top of file) is enabled
    forceConfigStyleMinArgCount = 2
  }
}

rewrite {
  rules = [
    SortImports
    SortModifiers
    # if your for has more than one single <- then it gets transformed into a multit-line curly brace one
    # PreferCurlyFors
    RedundantParens
  ]
  trailingCommas.style = multiple
}
